{
  "pipelineSpec": {
    "components": {
      "comp-train-model": {
        "executorLabel": "exec-train-model"
      }
    },
    "deploymentSpec": {
      "executors": {
        "exec-train-model": {
          "container": {
            "args": [
              "--executor_input",
              "{{$}}",
              "--function_to_execute",
              "train_model"
            ],
            "command": [
              "sh",
              "-c",
              "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip || python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1 python3 -m pip install --quiet     --no-warn-script-location 'loguru==0.6.0' 'scikit-learn==1.2.2' 'pandas==2.0.1' 'google-cloud-aiplatform' 'kfp==1.8.19' && \"$0\" \"$@\"\n",
              "sh",
              "-ec",
              "program_path=$(mktemp -d)\nprintf \"%s\" \"$0\" > \"$program_path/ephemeral_component.py\"\npython3 -m kfp.v2.components.executor_main                         --component_module_path                         \"$program_path/ephemeral_component.py\"                         \"$@\"\n",
              "\nimport kfp\nfrom kfp.v2 import dsl\nfrom kfp.v2.dsl import *\nfrom typing import *\n\ndef train_model(\n    # training_data: Input[Dataset],\n    # target_column: str,\n    # model_params: dict,\n    # model: Output[Model],\n) -> None:\n    \"\"\"_summary_\n\n    Args:\n        training_data (Input[Dataset]): _description_\n        target_column (str): _description_\n        model_params (dict): _description_\n        model (Output[Model]): _description_\n    \"\"\"\n    import joblib\n    import pandas as pd\n    from sklearn.tree import DecisionTreeClassifier\n\n    df_train = pd.read_csv(training_data.path)\n    y = df_train.pop(target_column)\n\n    dtc = DecisionTreeClassifier(**model_params)\n    dtc.fit(X=df_train, y=y)\n\n    model_path = model.uri + \"/model.joblib\"\n    joblib.dump(dtc, model_path)\n\n    training_job = aiplatform.CustomJob(\n        display_name=\"train-job\",\n        job_spec={\n            \"worker_pool_specs\": [\n                {\n                    \"machine_spec\": {\n                        \"machine_type\": \"n1-standard-4\",  # This specifies 4 vCPUs\n                    },\n                    \"replica_count\": 1,\n                    \"container_spec\": {\n                        # Container spec goes here\n                    },\n                }\n            ]\n        },\n    )\n\n    # Start the training job\n    training_job.run(sync=False)\n\n"
            ],
            "image": "python:3.9"
          }
        }
      }
    },
    "pipelineInfo": {
      "name": "batch-preds-pipeline"
    },
    "root": {
      "dag": {
        "tasks": {
          "train-model": {
            "cachingOptions": {
              "enableCache": true
            },
            "componentRef": {
              "name": "comp-train-model"
            },
            "taskInfo": {
              "name": "train-model"
            }
          }
        }
      }
    },
    "schemaVersion": "2.0.0",
    "sdkVersion": "kfp-1.8.19"
  },
  "runtimeConfig": {}
}